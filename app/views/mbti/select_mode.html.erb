<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>物語モード選択 - MBTI診断</title>
  <%= stylesheet_link_tag 'mbti_common', 'data-turbo-track': 'reload' %>
  <style>
    /* フォールバック用のスタイル - CSSが読み込まれない場合の対策 */
    .mode-selection {
      text-align: center;
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    
    .mode-title {
      font-size: 2.5rem;
      color: #333;
      margin-bottom: 1rem;
      background: linear-gradient(45deg, #667eea, #764ba2);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      text-align: center;
      width: 100%;
      display: block;
      margin-left: auto;
      margin-right: auto;
    }
    
    .mode-subtitle {
      font-size: 1.2rem;
      color: #666;
      margin-bottom: 3rem;
    }
    
    .modes-grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: 2rem;
      margin-bottom: 3rem;
      width: 100%;
    }
    
    /* タブレット以上で2列表示 */
    @media (min-width: 768px) {
      .modes-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }
    
    /* デスクトップ以上で2列表示（一行に二つずつ） */
    @media (min-width: 1024px) {
      .modes-grid {
        grid-template-columns: repeat(2, 1fr);
        max-width: 1000px;
        margin: 0 auto 3rem auto;
      }
      
      .mode-card {
        min-height: 350px;
      }
    }
    
    /* 大きな画面では最大幅を制限 */
    @media (min-width: 1200px) {
      .modes-grid {
        max-width: 1200px;
      }
    }
    
    .mode-card {
      background: white;
      border-radius: 20px;
      padding: 2rem;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      transition: all 0.3s ease;
      cursor: pointer;
      border: 3px solid transparent;
      min-height: 300px;
      display: flex;
      flex-direction: column;
    }
    
    .mode-card:hover {
      transform: translateY(-10px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }
    
    .mode-card.selected {
      border-color: #667eea;
      background: linear-gradient(135deg, #f8f9ff, #e8f0ff);
    }
    
    .mode-icon {
      font-size: 4rem;
      margin-bottom: 1rem;
    }
    
    .mode-name {
      font-size: 1.5rem;
      font-weight: bold;
      color: #333;
      margin-bottom: 1rem;
    }
    
    .mode-description {
      color: #666;
      line-height: 1.6;
      margin-bottom: 1.5rem;
      flex-grow: 1;
    }
    
    .mode-example {
      font-size: 0.9rem;
      color: #888;
      font-style: italic;
      margin-top: auto;
    }
    
    .creator-card {
      background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
      color: white;
      border: 3px solid #ff6b6b;
    }
    
    .creator-card:hover {
      background: linear-gradient(135deg, #ff5252 0%, #e64a19 100%);
      border-color: #ff5252;
    }
    
    .creator-card .mode-name {
      color: white;
      font-weight: 700;
    }
    
    .creator-card .mode-description {
      color: rgba(255, 255, 255, 0.9);
    }
    
    .creator-card .mode-example {
      color: rgba(255, 255, 255, 0.8);
      background: rgba(255, 255, 255, 0.1);
      padding: 0.5rem;
      border-radius: 8px;
      margin-top: 1rem;
    }
    
    .creator-card.selected {
      border-color: #ff6b6b;
      background: linear-gradient(135deg, #ff5252 0%, #e64a19 100%);
      box-shadow: 0 20px 40px rgba(255, 107, 107, 0.3);
    }
    
    .continue-button {
      background: linear-gradient(45deg, #667eea, #764ba2);
      color: white;
      border: none;
      padding: 15px 40px;
      border-radius: 30px;
      font-size: 1.2rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      opacity: 0.5;
      pointer-events: none;
      margin-top: 2rem;
    }
    
    .continue-button.active {
      opacity: 1;
      pointer-events: auto;
    }
    
    .continue-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
    }
    
    .back-link {
      color: #667eea;
      text-decoration: none;
      font-size: 1.1rem;
      margin-bottom: 2rem;
      display: inline-block;
    }
    
    .back-link:hover {
      text-decoration: underline;
    }
    
    .back-section {
      margin-top: 2rem;
      text-align: center;
    }
    
    .back-button {
      color: #667eea;
      text-decoration: none;
      font-size: 1.1rem;
      display: inline-block;
      padding: 10px 20px;
      border: 2px solid #667eea;
      border-radius: 25px;
      transition: all 0.3s ease;
    }
    
    .back-button:hover {
      background-color: #667eea;
      color: white;
      text-decoration: none;
    }
    
    /* レスポンシブ対応 */
    @media (max-width: 767px) {
      .mode-selection {
        padding: 1rem;
      }
      
      .mode-title {
        font-size: 2rem;
        text-align: center;
      }
      
      .mode-subtitle {
        font-size: 1rem;
        text-align: center;
      }
      
      .mode-card {
        padding: 1.5rem;
        min-height: 250px;
      }
      
      .mode-icon {
        font-size: 3rem;
      }
      
      .mode-name {
        font-size: 1.3rem;
      }
      
      .continue-button {
        padding: 12px 30px;
        font-size: 1.1rem;
      }
    }
    
    /* タブレット以上でも中央揃えを確実にする */
    @media (min-width: 768px) {
      .mode-title {
        text-align: center;
      }
      
      .mode-subtitle {
        text-align: center;
      }
    }
  </style>
</head>
<body>
  
    <div class="mode-selection">
      
      <h1 class="mode-title">物語モードを選択</h1>
      
      <%= form_with url: mbti_set_mode_path, method: :post, local: true, id: "mode-form" do |form| %>
        <%= form.hidden_field :session_id, value: @session_id %>
        <%= form.hidden_field :story_mode, id: "selected-mode" %>
        <% if params[:engine].present? %>
          <%= form.hidden_field :engine, value: params[:engine] %>
        <% end %>
        
        <div class="modes-grid">
          <div class="mode-card" data-mode="horror">
            <div class="mode-icon">👻</div>
            <div class="mode-name">ホラー</div>
            
            <div class="mode-example">
              例：「暗い森で道に迷った時、あなたは...」
            </div>
          </div>
          
          <div class="mode-card" data-mode="adventure">
            <div class="mode-icon">🗺️</div>
            <div class="mode-name">アドベンチャー</div>
            
            <div class="mode-example">
              例：「古代遺跡の謎を解く時、あなたは...」
            </div>
          </div>
          
          <div class="mode-card" data-mode="mystery">
            <div class="mode-icon">🔍</div>
            <div class="mode-name">ミステリー</div>
            
            <div class="mode-example">
              例：「不可解な事件の手がかりを発見した時、あなたは...」
            </div>
          </div>
          
          <div class="mode-card creator-card" data-mode="creator">
            <div class="mode-icon">✨</div>
            <div class="mode-name">物語クリエイター</div>
           
            <div class="mode-example">
              例：「近未来の東京で失われた記憶を探す」
            </div>
          </div>
        </div>
        
        <button type="submit" class="continue-button" id="continue-button">
          選択したモードで診断を開始
        </button>
      <% end %>
      
      <div class="back-section">
        <%= link_to "← 戻る", mbti_path, class: "back-button" %>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const modeCards = document.querySelectorAll('.mode-card');
      const continueButton = document.getElementById('continue-button');
      const selectedModeInput = document.getElementById('selected-mode');
      
      modeCards.forEach(card => {
        card.addEventListener('click', function() {
          // 他のカードの選択を解除
          modeCards.forEach(c => c.classList.remove('selected'));
          
          // 現在のカードを選択
          this.classList.add('selected');
          
          // 選択されたモードを設定
          const mode = this.dataset.mode;
          selectedModeInput.value = mode;
          
          // クリエイターモードの場合は特別な処理
          if (mode === 'creator') {
            continueButton.textContent = '物語を作成する';
            continueButton.style.background = 'linear-gradient(45deg, #ff6b6b, #ee5a24)';
          } else {
            continueButton.textContent = '選択したモードで診断を開始';
            continueButton.style.background = 'linear-gradient(45deg, #667eea, #764ba2)';
          }
          
          // ボタンを有効化
          continueButton.classList.add('active');
        });
      });
    });
  </script>
</body>
</html>

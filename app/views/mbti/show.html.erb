<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>MBTI診断 - 質問 <%= @current_question_number %></title>
  <%= stylesheet_link_tag 'mbti_show', 'data-turbo-track': 'reload' %>
</head>
<body>
  <div class="container">
    <div class="question-counter">
      質問 <%= @current_question_number %>
    </div>

    <% if flash[:alert] %>
      <div class="alert">
        <%= flash[:alert] %>
      </div>
    <% end %>


    <h2 class="question"><%= @current_question.question %></h2>

    <%= form_with url: mbti_answer_path, method: :post, local: true, id: "answer-form" do |form| %>
      <%= form.hidden_field :session_id, value: @mbti_session.session_id %>
      <%= form.hidden_field :authenticity_token, value: form_authenticity_token %>
      <div class="options">
        <div class="option" data-choice="A">
          <div class="option-label">A</div>
          <div class="option-text"><%= @current_question.options[0] %></div>
        </div>
        <div class="option" data-choice="B">
          <div class="option-label">B</div>
          <div class="option-text"><%= @current_question.options[1] %></div>
        </div>
      </div>

      <%= form.hidden_field :choice, id: "choice-input" %>

      <div class="navigation">
        <% if @current_question_number > 1 %>
          <%= link_to "前の質問", mbti_show_path(session_id: @mbti_session.session_id), class: "back-button" %>
        <% else %>
          <div></div>
        <% end %>

        <div class="right-buttons">
          <% if @can_terminate_early %>
            <button type="button" class="terminate-button" id="terminate-button">
              診断を終了
            </button>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const options = document.querySelectorAll('.option');
      const choiceInput = document.getElementById('choice-input');
      const form = document.getElementById('answer-form');
      const terminateButton = document.getElementById('terminate-button');

      options.forEach(option => {
        option.addEventListener('click', function() {
          // 他の選択を解除
          options.forEach(opt => opt.classList.remove('selected'));
          
          // 現在の選択をマーク
          this.classList.add('selected');
          
          // 選択値を設定
          const choice = this.dataset.choice;
          choiceInput.value = choice;
          
          // 少し遅延してからフォームを送信（視覚的フィードバックのため）
          setTimeout(() => {
            form.submit();
          }, 300);
        });
      });

      // 診断終了ボタンの処理
      if (terminateButton) {
        terminateButton.addEventListener('click', function() {
          if (confirm('診断を終了しますか？')) {
            // 終了用のhidden fieldを追加
            const terminateInput = document.createElement('input');
            terminateInput.type = 'hidden';
            terminateInput.name = 'terminate_early';
            terminateInput.value = 'true';
            form.appendChild(terminateInput);
            form.submit();
          }
        });
      }
    });
  </script>
</body>
</html>

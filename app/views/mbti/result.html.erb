<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="csrf-token" content="<%= form_authenticity_token %>">
  <title>MBTI診断結果</title>
  <%= stylesheet_link_tag 'mbti_result', 'data-turbo-track': 'reload' %>
</head>
<body>
    <div class="header">
      <div class="result-icon">🎯</div>
      <h1 class="mbti-type"><%= @result.mbti_type %></h1>
      <p class="mbti-description"><%= @result.description %></p>
      
      <% if @answer_count < 20 %>
        <div class="warning-message">
          <div class="warning-icon">⚠️</div>
          <div class="warning-text">
            <strong>診断精度について</strong><br>
            回答数が<%= @answer_count %>問と少ないため、診断結果の精度が低い可能性があります。<br>
            より正確な診断のためには、20問以上回答することをお勧めします。
          </div>
        </div>
      <% end %>
    </div>

    <div class="scores-container">
      <h2 class="scores-title">詳細スコア</h2>
      <div class="dimensions">
        <% @result.dimension_scores.each do |dimension_name, scores| %>
          <div class="dimension">
            <div class="dimension-name"><%= dimension_name %></div>
            <div class="dimension-scores">
              <% dominant_type, _dominant_score = scores.max_by { |_, v| v } %>
              <div class="score-item">
                <div class="score-label">優勢タイプ</div>
                <div class="score-value"><%= dominant_type %></div>
              </div>
            </div>
            <div class="score-bar">
              <% 
                total = scores.values.sum
                first_type = scores.keys.first
                second_type = scores.keys.last
                first_percentage = total > 0 ? (scores[first_type].to_f / total * 100).round : 50
                second_percentage = 100 - first_percentage
              %>
              <div class="score-fill <%= first_type.downcase %>" style="width: <%= first_percentage %>%"></div>
            </div>
            <div style="display: flex; justify-content: space-between; font-size: 0.8rem; color: #666;">
              <span><%= first_type %></span>
              <span><%= second_type %></span>
            </div>
          </div>
        <% end %>
      </div>
    </div>

    <div class="actions">
      <a href="<%= mbti_resume_path(session_id: @mbti_session.session_id) %>" class="action-button continue-button">続きから再開する</a>
      <a href="<%= mbti_path %>" class="action-button">ホームに戻る</a>
      <!-- <button id="analyze-button" class="action-button secondary" data-session-id="<%= @mbti_session.session_id %>">さらに分析する</button> -->
      <!-- <a href="<%= mbti_result_ai_path(session_id: @mbti_session.session_id) %>" class="action-button ai-button">🤖 AI診断で詳細分析</a> -->
      <button id="personalized-report-button" class="action-button primary" data-session-id="<%= @mbti_session.session_id %>">あなただけの詳細レポート</button>
    </div>
    
    <!-- あなただけの詳細レポート（空コンテナ。クリック時に内容を注入して表示） -->
    <div id="personalized-report-container" class="scores-container personalized-report" style="display: none;"></div>
  

  <script>
    // CSRF token
    function csrfToken() {
      const meta = document.querySelector('meta[name="csrf-token"]');
      return meta ? meta.getAttribute('content') : '';
    }
    

    // アニメーション効果
    document.addEventListener('DOMContentLoaded', function() {
      const scoreFills = document.querySelectorAll('.score-fill');
      scoreFills.forEach(fill => {
        const width = fill.style.width;
        fill.style.width = '0%';
        setTimeout(() => {
          fill.style.width = width;
        }, 500);
      });
      const analyzeBtn = document.getElementById('analyze-button');
      if (analyzeBtn) {
        analyzeBtn.addEventListener('click', async function() {
          const sessionId = this.getAttribute('data-session-id');
          const existing = document.getElementById('analysis-container');
          if (existing) existing.remove();

          const section = document.createElement('div');
          section.id = 'analysis-container';
          section.className = 'scores-container';
          section.innerHTML = '<h2 class="scores-title">詳細分析</h2><div>分析中...</div>';
          document.body.appendChild(section);
          section.scrollIntoView({ behavior: 'smooth' });

          try {
            const res = await fetch('/mbti/analyze', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': csrfToken()
              },
              body: JSON.stringify({ session_id: sessionId, type: '<%= @result.mbti_type %>' })
            });
            if (!res.ok) throw new Error('分析に失敗しました');
            const data = await res.json();
            section.innerHTML = `
              <h2 class=\"scores-title\">詳細分析（${data.mbti_type}）</h2>
              <div style=\"margin-bottom:16px; white-space: pre-wrap;\">${data.type_details || ''}</div>
              <h3 style=\"font-size:1.2rem; margin: 12px 0;\">あなたの回答のまとめ</h3>
              <div style=\"white-space: pre-wrap;\">${data.answer_summary || ''}</div>
            `;
          } catch (e) {
            section.innerHTML = '<h2 class="scores-title">詳細分析</h2><div style="color:#c00;">分析に失敗しました。時間をおいて再度お試しください。</div>';
          }
        });
      }

      const personalizedReportBtn = document.getElementById('personalized-report-button');
      if (personalizedReportBtn) {
        personalizedReportBtn.addEventListener('click', async function() {
          const sessionId = this.getAttribute('data-session-id');
          const section = document.getElementById('personalized-report-container');
          if (!section) return;
          section.style.display = 'block';
          section.innerHTML = '<h2 class="scores-title">🎭 あなただけの詳細レポート</h2><div class="loading">物語の文脈で分析中...</div>';
          section.scrollIntoView({ behavior: 'smooth' });

          try {
            const res = await fetch('/mbti/personalized_report', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': csrfToken()
              },
              body: JSON.stringify({ session_id: sessionId, type: '<%= @result.mbti_type %>' })
            });
            if (!res.ok) throw new Error('レポート生成に失敗しました');
            const data = await res.json();
            section.innerHTML = `
              <h2 class=\"scores-title\">🎭 あなただけの詳細レポート（${data.mbti_type}）</h2>
              <div class=\"story-mode-badge\">${getStoryModeLabel(data.story_mode)}</div>
              <div class=\"report-section\">
                <h3 class=\"report-section-title\">📖 物語でのあなたの選択分析</h3>
                <div class=\"report-content\">${data.story_analysis || ''}</div>
              </div>
              <div class=\"report-section\">
                <h3 class=\"report-section-title\">🔍 性格の洞察</h3>
                <div class=\"report-content\">${data.personality_insights || ''}</div>
              </div>
              <div class=\"report-section\">
                <h3 class=\"report-section-title\">🌟 成長のヒント</h3>
                <div class=\"report-content\">${data.growth_suggestions || ''}</div>
              </div>
            `;
          } catch (e) {
            section.innerHTML = '<h2 class="scores-title">🎭 あなただけの詳細レポート</h2><div style="color:#c00;">レポート生成に失敗しました。時間をおいて再度お試しください。</div>';
          }
        });
      }

      function getStoryModeLabel(storyMode) {
        const labels = {
          'horror': 'ホラー・スリラー',
          'adventure': 'アドベンチャー・冒険',
          'mystery': 'ミステリー・推理'
        };
        return labels[storyMode] || 'アドベンチャー・冒険';
      }
    });
  </script>
</body>
</html>
